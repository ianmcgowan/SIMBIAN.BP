SUBROUTINE JSON.GET.QUERY(JSON.STRING, QUERY, RESULT, ERR)
  * Query a JSON object to return a value
  *   Input : JSON.STRING - A JSON object or array starting with '{' or '['
  *   Query : QUERY - A string that lists the query similar to a (very) basic JQ query
  *   Output: RESULT - either a complex object/array or simple string, number, literal
  * Examples (see JSON.GET.TEST for more):
  *   JSON.STRING = ' {"name":"John Doe","age":30,"address":{"street":"123 Main St","city":"Anytown"},'
  *   JSON.STRING:= ' "phones":["555-1234","555-5678",{"Phone": "555-1212", "Ext": 1234}] }'
  *   QUERY='.name'          ; RESULT=John Doe
  *   QUERY='.address'       ; RESULT={"street":"123 Main St","city":"Anytown"}
  *   QUERY='.address.city'  ; RESULT=Anytown
  *   QUERY='.phones.[3].Ext'; RESULT=1234
  RESULT=''
  ERR=''
  QUERY.LIST=TRIM(QUERY)
  IF QUERY.LIST[1,1] # '.' THEN ERR="Error: Invalid query, must start with ." ; RETURN
  IF QUERY.LIST # '.' THEN CONVERT '.' TO @VM IN QUERY.LIST
  CURRENT.JSON=JSON.STRING
  FOR Q=2 TO DCOUNT(QUERY.LIST<1>,@VM)
    SUB.QUERY=QUERY.LIST<1,Q>
    IF SUB.QUERY[1,1]='[' THEN QUERY.TYPE='ARRAY' ELSE QUERY.TYPE='OBJECT'
    FIRST.CHAR=TRIM(CURRENT.JSON)[1,1]
    BEGIN CASE
      CASE FIRST.CHAR = '{' AND QUERY.TYPE = 'OBJECT'
        CALL JSON.GET.OBJECT(CURRENT.JSON, OBJECT, ERR)
        IF ERR # '' THEN RETURN
        LOCATE SUB.QUERY IN OBJECT<1> SETTING POS THEN
          CURRENT.JSON=OBJECT<3,POS>
        END ELSE
          ERR='Error: Attribute ':SUB.QUERY:' not found'
          RETURN
        END
      CASE FIRST.CHAR = '[' AND QUERY.TYPE = 'ARRAY'
        INDX=SUB.QUERY[2,LEN(SUB.QUERY)-2] ;* Could do more complex indexes like 1,3,5 or 1-3,5-9 etc.
        IF NOT(NUM(INDX)) THEN ERR='Error: invalid array index:':INDX ; RETURN
        IF INDX < 1 THEN ERR='Error: invalid array index < 1'   ; RETURN
        CALL JSON.GET.ARRAY(CURRENT.JSON, ARRAY, ERR)
        IF ERR # '' THEN RETURN
        IF INDX > DCOUNT(ARRAY,@AM) THEN ERR='Error: invalid array index > ':DCOUNT(ARRAY,@AM)
        CURRENT.JSON=ARRAY<INDX>
      CASE 1
        ERR='Error: mismatched query type'
        RETURN
    END CASE
  NEXT Q
  * Check if the result is an object or array and pretty print it
  FIRST.CHAR.RESULT = TRIM(CURRENT.JSON)[1,1]
  IF FIRST.CHAR.RESULT = '{' OR FIRST.CHAR.RESULT = '[' THEN
    CALL JSON.PRETTY.PRINT(CURRENT.JSON, 0, PRETTY.RESULT, ERR)
    IF ERR = '' THEN
      RESULT = PRETTY.RESULT
    END ELSE
      * If pretty print fails, return the raw JSON but keep the error
      RESULT = CURRENT.JSON
    END
  END ELSE
    RESULT = CURRENT.JSON
  END
RETURN
